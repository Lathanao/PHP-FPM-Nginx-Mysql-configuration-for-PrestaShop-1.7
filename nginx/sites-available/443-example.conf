server {
    listen 80;

    # Can set *.example.com;
    server_name website.website.com;
    root /var/www/website;

    location /admin-dev/ { #Change this to your admin folder
        # index index.php;
        if (!-e $request_filename) {
            rewrite ^/.*$ /admin-dev/index.php last;
        }
    }

    location /admin99/ { #Change this to your admin folder
        # index index.php;
        if (!-e $request_filename) {
            rewrite ^/.*$ /admin99/index.php last;
        }
    }

    # [REQUIRED EDIT IF MULTILANG]
    # rewrite ^/fr$ /fr/ redirect;
    # rewrite ^/fr/(.*) /$1;

    # For adept of Apache authentification system, here how to proced
    # http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html
    # location / {
    #     auth_basic           "closed site";
    #     auth_basic_user_file conf/htpasswd;
    # }

    # Redirect to error page https://en.wikipedia.org/wiki/List_of_HTTP_status_codes
    error_page 404 /index.php?controller=404;
    # If deny or what ever, no need to inform, just display a 500
    # Can do it better by display a 420 (need create 420 file, and change 500 -> 420 in this file)
    error_page 500 /error500.html;

    # Increase a little Nginx buffer, but no really need
    client_header_buffer_size 16k;
    large_client_header_buffers 16 16k;

    # A trick to remove Cookies on static content
    fastcgi_ignore_headers "Set-Cookie";
    fastcgi_hide_header "Set-Cookie";
    fastcgi_hide_header X-Powered-By;

    # Add headers to serve security related headers (It is intended to
    # have those duplicated to the ones above)
    add_header Cache-Control "no-store";
    add_header X-Content-Type-Options "nosniff" always;
  	add_header X-Frame-Options "SAMEORIGIN" always;
  	add_header X-Xss-Protection "1; mode=block" always;
    add_header Referrer-Policy  strict-origin-when-cross-origin;
    add_header Feature-policy "accelerometer 'none'; camera 'none'; geolocation 'none'; gyroscope 'none'; magnetometer 'none'; microphone 'none'; payment 'none'; usb 'none'";
    add_header Content-Security-Policy   "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    #Errors shoud be alreasy setup in nginx.conf
    access_log /var/log/nginx/access_website.log;
    error_log /var/log/nginx/error_website.log;

    #rewrite ^/api/?(.*)$ /webservice/dispatcher.php?url=$1 last;
    #rewrite ^/([a-z0-9]+)\-([a-z0-9]+)(\-[_a-zA-Z0-9-]*)/[_a-zA-Z0-9-]*\.jpg$ /img/p/$1-$2$3.jpg last;
    #rewrite ^/([0-9]+)\-([0-9]+)/[_a-zA-Z0-9-]*\.jpg$ /img/p/$1-$2.jpg last;
    #rewrite ^/([0-9])(\-[_a-zA-Z0-9-]*)?/[_a-zA-Z0-9-]*\.jpg$ /img/p/$1/$1$2.jpg last;
    #rewrite ^/([0-9])([0-9])(\-[_a-zA-Z0-9-]*)?/[_a-zA-Z0-9-]*\.jpg$ /img/p/$1/$2/$1$2$3.jpg last;
    #rewrite ^/([0-9])([0-9])([0-9])(\-[_a-zA-Z0-9-]*)?/[_a-zA-Z0-9-]*\.jpg$ /img/p/$1/$2/$3/$1$2$3$4.jpg last;
    #rewrite ^/([0-9])([0-9])([0-9])([0-9])(\-[_a-zA-Z0-9-]*)?/[_a-zA-Z0-9-]*\.jpg$ /img/p/$1/$2/$3/$4/$1$2$3$4$5.jpg last;
    #rewrite ^/([0-9])([0-9])([0-9])([0-9]css)([0-9])(\-[_a-zA-Z0-9-]*)?/[_a-zA-Z0-9-]*\.jpg$ /img/p/$1/$2/$3/$4/$5/$1$2$3$4$5$6.jpg last;
    #rewrite ^/([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])(\-[_a-zA-Z0-9-]*)?/[_a-zA-Z0-9-]*\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$1$2$3$4$5$6$7.jpg last;
    #rewrite ^/([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])(\-[_a-zA-Z0-9-]*)?/[_a-zA-Z0-9-]*\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$1$2$3$4$5$6$7$8.jpg last;
    #rewrite ^/([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])(\-[_a-zA-Z0-9-]*)?/[_a-zA-Z0-9-]*\.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$8/$1$2$3$4$5$6$7$8$9.jpg last;
    #rewrite ^/c/([0-9]+)(\-[_a-zA-Z0-9-]*)/[_a-zA-Z0-9-]*\.jpg$ /img/c/$1$2.jpg last;
    #rewrite ^/c/([a-zA-Z-]+)/[a-zA-Z0-9-]+\.jpg$ /img/c/$1.jpg last;


    location /img {
        location ~ \.php$ { deny all; }
        location ~ \.(jpg|jpeg)$ {
            try_files $uri =404;
            break;
        }
        location /img/p/ {
            location ~ \..*/.*\.jpg$ {return 404;}
            rewrite ^/([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$1$2$3.jpg last;
            rewrite ^/([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$1$2$3$4.jpg last;
            rewrite ^/([0-9])([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$3/$1$2$3$4$5.jpg last;
            rewrite ^/([0-9])([0-9])([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$3/$4/$1$2$3$4$5$6.jpg last;
            rewrite ^/([0-9])([0-9])([0-9])([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$3/$4/$5/$1$2$3$4$5$6$7.jpg last;
            rewrite ^/([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$1$2$3$4$5$6$7$8.jpg last;
            rewrite ^/([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$1$2$3$4$5$6$7$8$9.jpg last;
            rewrite ^/([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$8/$1$2$3$4$5$6$7$8$9$10.jpg last;
            rewrite ^/c/([0-9]+)(-[.*_a-zA-Z0-9-]*)(-[0-9]+)?/.+.jpg$ /img/c/$1$2$3.jpg last;
            rewrite ^/c/([a-zA-Z_-]+)(-[0-9]+)?/.+.jpg$ /img/c/$1$2.jpg last;
        }
    }

    # PHP scripts -> PHP-FPM server listening on 127.0.0.1:9000
    location ~ \.php$ {
      include       snippets/fastcgi-php.conf;
      fastcgi_pass  unix:/var/run/php/php7.0-fpm.sock;
      fastcgi_param PATH_INFO       $fastcgi_path_info;
      fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_keep_conn on;
      fastcgi_read_timeout 30s;
      fastcgi_send_timeout 30s;
      fastcgi_buffer_size 32k;
      fastcgi_buffers 32 32k;
    }

    # Security
    location ~ /\. {
      deny  all;
      return 500;
    }

    location ~ /.well-known {
      allow all;
    }

    # close access to .git/logs/HEAD
    location ~ /.git {
      deny  all;
      return 500;
    }


    # Stuffs
    location = /robots.txt  { access_log off; log_not_found off; }
    location = /favicon.ico { access_log off; log_not_found off; }

    location ~* ^.+\.(jpg|jpeg|gif|css|png|js)$ {
        expires         30d;
        access_log      off;

        try_files $uri /nextcloud/index.php$request_uri;
        add_header Cache-Control "public, max-age=15778463";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
        add_header Referrer-Policy no-referrer;
    }

    location / {
      # this serves static files that exist without running other rewrite tests
      if (-f $request_filename) {
        expires 30d;
        break;
      }
      # Rewrite rules
      if (!-e $request_filename) {
        rewrite ^(.+)$ /index.php?q=$1 last;
      }
    }

    # Banned locations (only reached if the earlier PHP entry point regexes don't match)
    location ~* (\.php$|\.phtml$|\.htaccess$|\.git) {
        return 500;
    }
}
