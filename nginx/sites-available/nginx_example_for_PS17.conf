server {
    listen 80;

    # [REQUIRED EDIT] Change by *.example.com;
    server_name example.com www.example.com;
    root /var/www/dev.example.lan;
    index index.php;

    # [REQUIRED EDIT]
    # Change this block to your admin folder
    location /admin-dev/ { #Change this to your admin folder
        if (!-e $request_filename) {
            rewrite ^/.*$ /admin-dev/index.php last;
        }
        # [REQUIRED EDIT]
        # auth_basic "Restricted Area";
        # auth_basic_user_file /path/to/.htpasswd;
    }

    # [REQUIRED EDIT]
    # For adepts of Apache authentification system, here how to proceed
    # http://nginx.org/en/docs/http/ngx_http_auth_basic_module.html
    # location / {
    #     auth_basic           "Restricted Area";
    #     auth_basic_user_file /path/to/.htpasswd;
    # }

    # [REQUIRED EDIT]
    # Change with you website name
    # Errors shoud be alreasy setup in nginx.conf
    access_log /var/log/nginx/access_example.log;
    error_log /var/log/nginx/error_example.log;

    # [REQUIRED EDIT]
    # If in developement, probably https in not set
    # So, maybe getting a cache is not necessary
    # Can use a regex if ($http_origin ~ '^https?://(www\.shopdomain\.com)')
    location ~* \.(?:css|js)$ {
        if ($https = "") {
            expires 0;
            access_log off;
            add_header Cache-Control "no-cache";
        }
    }

    # [REQUIRED EDIT IF MULTILANG]
    # rewrite ^/fr$ /fr/ redirect;
    # rewrite ^/fr/(.*) /$1;

    # Redirect to error page https://en.wikipedia.org/wiki/List_of_HTTP_status_codes
    error_page 404 /index.php?controller=404;

    # If deny or what ever, no need to inform, just display a 500
    # [REQUIRED EDIT] Can do it better by display a 420 (need create 420 file,
    # and change 500 -> 420 in this file)
    error_page 500 /error500.html;
    error_page 420 /error420.html;

    # Increase a little Nginx buffer, but no really need
    client_header_buffer_size 16k;
    large_client_header_buffers 16 16k;

    # Remove the "Powered-By: PrestaShop"
    fastcgi_hide_header Powered-By;

    # Add headers to serve security related headers (It is intended to
    # have those duplicated to the ones above)

    # Order cache system (CDN, browserr to not cache this URL)
    # add_header Cache-Control "no-store";

    # Order the browser to consider files types as defined and disallow content sniffing
    add_header X-Content-Type-Options "nosniff" always;

    # Order the browser not to embed your web page in frame/iframe
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Security feature strongly recommended
    add_header X-Xss-Protection "1; mode=block" always;

    # Set how you want to set the referrer setting
    # Here, the full URL will be sent over a strict protocol like HTTPS
    add_header Referrer-Policy  strict-origin-when-cross-origin;

    # Order the browser to disable all unnecessary features
    add_header Feature-policy "accelerometer 'none'; camera 'none'; geolocation 'none'; gyroscope 'none'; magnetometer 'none'; microphone 'none'; payment 'none'; usb 'none'";

    # Order the browser to load only allowed on the website
    add_header Content-Security-Policy   "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Disable browser to request rescource over a cross domqin
    add_header X-Permitted-Cross-Domain-Policies master-only;

    # Experimental, need some stuff more to well report it in BO Prestashop
    # add_header Expect-CT 'max-age=60, report-uri="https://mydomain.com/report"';

    location /img {

        expires         max;
        access_log      off;

        # Image should be cached, set cache with long expiration
        add_header Cache-Control "public, max-age=31536000, immutable";
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header Content-Security-Policy   "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        add_header X-Permitted-Cross-Domain-Policies master-only;

        # If seek for original product pictures, redirect
        location ~* ^/([0-9])?/.+.(jpg)$  { return 500; break; }

        # [REQUIRED EDIT]
        # Remplace missing picture by a default already present in PrestaShop.
        # That have a cost in resource.
        # If you're 100% sure you don't have any missing picture, can remove it.
        location ~* ^.+\.(jpe?g|png)$ {
            # etag on; # Have to find why it's so slow downloading with
            error_page 404 =200 /img/404.gif;
            try_files $uri $uri/ /img/404.gif;
            break;
        }
        location /img/p/ {
            rewrite ^/([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$1$2$3.jpg last;
            rewrite ^/([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$1$2$3$4.jpg last;
            rewrite ^/([0-9])([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$3/$1$2$3$4$5.jpg last;
            rewrite ^/([0-9])([0-9])([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$3/$4/$1$2$3$4$5$6.jpg last;
            rewrite ^/([0-9])([0-9])([0-9])([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$3/$4/$5/$1$2$3$4$5$6$7.jpg last;
            rewrite ^/([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$1$2$3$4$5$6$7$8.jpg last;
            rewrite ^/([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$1$2$3$4$5$6$7$8$9.jpg last;
            rewrite ^/([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])([0-9])(-[_a-zA-Z0-9-]*)?(-[0-9]+)?/.+.jpg$ /img/p/$1/$2/$3/$4/$5/$6/$7/$8/$1$2$3$4$5$6$7$8$9$10.jpg last;
            rewrite ^/c/([0-9]+)(-[.*_a-zA-Z0-9-]*)(-[0-9]+)?/.+.jpg$ /img/c/$1$2$3.jpg last;
            rewrite ^/c/([a-zA-Z_-]+)(-[0-9]+)?/.+.jpg$ /img/c/$1$2.jpg last;
        }
        location /img/c/ {
            rewrite ^/c/([0-9]+)(-[.*_a-zA-Z0-9-]*)(-[0-9]+)?/.+.jpg$ /img/c/$1$2$3.jpg last;
            rewrite ^/c/([a-zA-Z_-]+)(-[0-9]+)?/.+.jpg$ /img/c/$1$2.jpg last;
        }
    }

    # PHP scripts
    # Can change the socket for 127.0.0.1:9000
    location ~ \.php$ {

        if (!-e $request_filename) {
            rewrite ^(.+)$ /index.php?q=$1 last;
        }

        include       snippets/fastcgi-php.conf;
        fastcgi_pass  unix:/var/run/php/php7.2-fpm-backoffice.sock;
        fastcgi_param PATH_INFO       $fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_keep_conn on;
        fastcgi_read_timeout 30s;
        fastcgi_send_timeout 30s;
        fastcgi_buffer_size 32k;
        fastcgi_buffers 32 32k;
    }

    # Security Rules Deny all
    location ~ /\. { deny  all; }

    location ~ ^/(app|bin|cache|classes|config|controllers|docs|localization|override|src|tests|tools|translations|travis-scripts|vendor|var)/ {
        deny all;
    }

    # Prevent exposing other sensitive files
    location ~ \.(yml|log|tpl|twig|sass|sql)$ { deny all; }

    # Prevent injection of php files
    location /upload {
        location ~ \.php$ {
            deny all;
        }
    }

    # vendor in modules directory
    location ~ ^/modules/.*/vendor/ {
        deny all;
    }

    # Do not save logs for these
    location = /robots.txt  { auth_basic off; allow all; access_log off; }
    location = /favicon.ico { auth_basic off; allow all; access_log off; }

    # Set header for static files
    location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2|html|json)$ {

        expires         max;
        access_log      off;

        # Remove Cookies on static content
        fastcgi_ignore_headers "Set-Cookie";
        fastcgi_hide_header "Set-Cookie";

        add_header Cache-Control "public, max-age=31536001, immutable";
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Xss-Protection "1; mode=block" always;
        add_header Referrer-Policy  strict-origin-when-cross-origin;
        add_header Feature-policy "accelerometer 'none'; camera 'none'; geolocation 'none'; gyroscope 'none'; magnetometer 'none'; microphone 'none'; payment 'none'; usb 'none'";
        add_header Content-Security-Policy   "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        add_header X-Permitted-Cross-Domain-Policies master-only;

        # Product and category pictures should not reach until this point
        # So, they are not affected by the following setting
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
        add_header Referrer-Policy no-referrer;
    }

    # AlphaImageLoader for IE and fancybox
    rewrite ^images_ie/?([^/]+)\.(jpe?g|png|gif)$ js/jquery/plugins/fancybox/images/$1.$2 last;

    # Web service API
    rewrite ^/api/?(.*)$ /webservice/dispatcher.php?url=$1 last;

    # Installation sandbox
    rewrite ^(/install(?:-dev)?/sandbox)/(.*) /$1/test.php last;

    # Try to catch other bad requests then deny
    location ~* !^/(index.(php|html|htm)$)|(phpmyadmin/) {
        deny all;
    }
}
